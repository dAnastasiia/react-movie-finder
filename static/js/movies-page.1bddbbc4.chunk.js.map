{"version":3,"sources":["services/movies-api.js","components/MoviesList/MoviesList.js","views/MoviesPage/MoviesPage.js"],"names":["api","fetchTrending","axios","get","then","res","data","results","fetchMovies","searchQuery","fetchMovieById","id","fetchMovieCast","fetchMovieReview","withRouter","movies","location","className","map","title","to","pathname","routes","state","from","MoviesPage","query","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","localStorage","setItem","reset","a","getItem","this","onSubmit","onChange","type","autoComplete","autoFocus","placeholder","MoviesList","Component"],"mappings":"yIAAA,qBA0CMA,EAAM,CACVC,cAzCoB,WACpB,OAAOC,IACJC,IADI,4FAIJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAqCxBC,YAlCkB,SAAAC,GAClB,OAAOP,IACJC,IADI,mGAEyFM,IAE7FL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YA8BxBG,eA3BqB,SAAAC,GACrB,OAAOT,IACJC,IADI,6CAEmCQ,EAFnC,8CAIJP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAuBnBM,eApBqB,SAAAD,GACrB,OAAOT,IACJC,IADI,6CAEmCQ,EAFnC,sDAIJP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAgBnBO,iBAbuB,SAAAF,GACvB,OAAOT,IACJC,IADI,6CAEmCQ,EAFnC,sDAIJP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,aAWXP,O,uGClBAc,eA3BI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,OACE,mCACE,oBAAIC,UAAU,cAAd,SACGF,EAAOG,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,MAAP,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOP,OAAZ,YAAsBJ,GAC9BY,MAAO,CACLC,KAAMR,IAJZ,SAQGG,KATIR,c,kLC0DJc,E,4MA9DbF,MAAQ,CACNR,OAAQ,GACRW,MAAO,I,EAaTC,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,cAAcD,MAC9B,EAAKE,SAAS,CAAEL,MAAOG,K,EAGzBG,aAAe,SAAAJ,GACbA,EAAEK,iBAEFjC,IAAIQ,YAAY,EAAKe,MAAMG,OAAOtB,MAAK,SAAAE,GACrC,EAAKyB,SAAS,CAAEhB,OAAO,YAAKT,QAG9B4B,aAAaC,QAAQ,QAAS,EAAKZ,MAAMG,OAEzC,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEL,MAAO,M,8FA5BzB,mCAAAW,EAAA,2DACQX,EAAQQ,aAAaI,QAAQ,UADrC,gCAIUtC,IAAIQ,YAAYkB,GAAOtB,MAAK,SAAAE,GAChC,EAAKyB,SAAS,CAAEhB,OAAO,YAAKT,QALlC,2C,0EA+BA,WAAU,IAAD,EACmBiC,KAAKhB,MAAvBG,EADD,EACCA,MAAOX,EADR,EACQA,OAEf,OACE,qCACE,uBAAMyB,SAAUD,KAAKP,aAAcf,UAAU,aAA7C,UACE,uBACEA,UAAU,mBACVwB,SAAUF,KAAKZ,aACfE,MAAOH,EACPgB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,wBAAQH,KAAK,SAASzB,UAAU,oBAAhC,uBAKDF,GAAU,cAAC+B,EAAA,EAAD,CAAY/B,OAAQA,W,GAzDdgC","file":"static/js/movies-page.1bddbbc4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchTrending = () => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=42c4fa9c05708253e8c2f9a05f447e85`,\r\n    )\r\n    .then(res => res.data.results);\r\n};\r\n\r\nconst fetchMovies = searchQuery => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=42c4fa9c05708253e8c2f9a05f447e85&query=${searchQuery}`,\r\n    )\r\n    .then(res => res.data.results);\r\n};\r\n\r\nconst fetchMovieById = id => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}?api_key=42c4fa9c05708253e8c2f9a05f447e85`,\r\n    )\r\n    .then(res => res.data);\r\n};\r\n\r\nconst fetchMovieCast = id => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=42c4fa9c05708253e8c2f9a05f447e85`,\r\n    )\r\n    .then(res => res.data);\r\n};\r\n\r\nconst fetchMovieReview = id => {\r\n  return axios\r\n    .get(\r\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=42c4fa9c05708253e8c2f9a05f447e85`,\r\n    )\r\n    .then(res => res.data.results);\r\n};\r\n\r\nconst api = {\r\n  fetchTrending,\r\n  fetchMovies,\r\n  fetchMovieById,\r\n  fetchMovieCast,\r\n  fetchMovieReview,\r\n};\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from '../../routes';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"movies-list\">\r\n        {movies.map(({ id, title }) => (\r\n          <li key={id}>\r\n            <NavLink\r\n              to={{\r\n                pathname: `${routes.movies}/${id}`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              {title}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import React, { Component } from 'react';\r\nimport api from '../../services/movies-api';\r\n\r\nimport MoviesList from '../../components/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    query: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const query = localStorage.getItem('query');\r\n\r\n    if (query) {\r\n      await api.fetchMovies(query).then(data => {\r\n        this.setState({ movies: [...data] });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const value = e.currentTarget.value;\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    api.fetchMovies(this.state.query).then(data => {\r\n      this.setState({ movies: [...data] });\r\n    });\r\n\r\n    localStorage.setItem('query', this.state.query);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query, movies } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            onChange={this.handleChange}\r\n            value={query}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n          />\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            Search\r\n          </button>\r\n        </form>\r\n\r\n        {movies && <MoviesList movies={movies} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"sourceRoot":""}